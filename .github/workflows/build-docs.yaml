# Workflow derived from https://github.com/r-lib/actions/tree/v2/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  push:
    paths:
      - '**.Rmd'
      - "R/**"

name: Build documentation (README, .Rmd files, .Rd files)


jobs:
  render:
    name: Render README
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2

      - name: Install rmarkdown, remotes, and the local package
        run: |
          install.packages("remotes")
          remotes::install_local(".")
          remotes::install_cran("rmarkdown")
        shell: Rscript {0}

      - name: Render README
        run: Rscript -e 'rmarkdown::render("README.Rmd")'

      - name: Commit results
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git commit README.md -m 'Re-build README.Rmd' || echo "No changes to commit"
          git push origin || echo "No changes to commit"

  document:
    name: Update documentation
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    # This job doesn't depend on rendering the README, but since both jobs
    # result in a new commit, we want to make sure they don't run concurrently
    if: ${{ always() }}  # Will always run, regardless of `render`'s success/failure
    needs: render        # But will run after `render`

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup R
        uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      - name: Install dependencies
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::roxygen2
          needs: roxygen2

      - name: Document
        run: roxygen2::roxygenise()
        shell: Rscript {0}

      - name: Commit and push changes
        run: |
          git config --local user.name "$GITHUB_ACTOR"
          git config --local user.email "$GITHUB_ACTOR@users.noreply.github.com"
          git add man/\* NAMESPACE
          git commit -m "Update documentation" || echo "No changes to commit"
          git pull --ff-only
          git push origin
